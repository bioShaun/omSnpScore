#!/usr/bin/env python3

import click
import json
from pathlib import Path
from snpScore import core, snpStats


@click.command()
@click.option(
    '-p',
    '--parameters',
    help='snpScore parameters json string.',
    required=True,
    type=click.STRING
)
@click.option(
    '-d',
    '--data_dir',
    help='vcf hd5 file directory.',
    required=True,
    type=click.Path(exists=True, file_okay=False)
)
@click.option(
    '--vcf_ann_file',
    help='snp annotation file.',
    required=True,
    type=click.Path()
)
@click.option(
    '-o',
    '--outdir',
    help='results directory.',
    required=True,
    type=click.Path()
)
def main(parameters,
         data_dir,
         vcf_ann_file,
         outdir):
    parameters_obj = json.loads(parameters)
    group_labels = snpStats.groups_from_params(parameters_obj)
    vcf_table_files = snpStats.vcfs_from_params(parameters_obj, data_dir)
    outdir = Path(outdir)
    outdir_suffix = snpStats.outdir_suffix_from_params(
        parameters_obj)
    outdir = outdir.resolve()
    full_outdir = outdir / outdir_suffix
    snp_score_inputs = {
        attr_i.name for attr_i in core.SNPscore.__attrs_attrs__}
    input_params = {
        'group_labels': group_labels,
        'vcf_table_files': vcf_table_files,
        'outdir': full_outdir,
        'vcf_ann_file': vcf_ann_file,
    }

    for param_i in parameters_obj:
        if param_i in snp_score_inputs:
            if parameters_obj[param_i]:
                input_params.update({param_i: parameters_obj[param_i]})

    snp_score_obj = core.SNPscore(**input_params)
    snp_score_obj.run
    print(full_outdir)


if __name__ == '__main__':
    main()
