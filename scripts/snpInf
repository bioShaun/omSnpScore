#!/usr/bin/env python3

import json
import click
from snpScore import core, snpAnn


@click.command()
@click.option('--gene_bed',
              type=click.Path(exists=True, dir_okay=False),
              help='gene position bedfile.',
              required=True)
@click.option('--snp_ann_dir',
              type=click.Path(exists=True, file_okay=False),
              help='snp annotation directory.',
              required=True)
@click.option('--snp_data_dir',
              type=click.Path(exists=True, file_okay=False),
              help='snp data directory.',
              required=True)
@click.option('-p',
              '--parameters',
              help='snpScore parameters json string.',
              required=True,
              type=click.STRING)
@click.option('--outdir',
              type=click.Path(),
              help='output directory.',
              required=True)
def main(gene_bed, snp_ann_dir, snp_data_dir, outdir, parameters):
    # step0 extract parameters
    parameters_obj = json.loads(parameters)
    gene_list = parameters_obj.get('gene_id', '')
    genes = ','.join(gene_list)
    chrom = parameters_obj.get('chrom', '')
    chrom_start = parameters_obj.get('chrom_start', '')
    chrom_end = parameters_obj.get('chrom_end', '')
    if chrom:
        position = f'{chrom}:{chrom_start}-{chrom_end}'
    else:
        position = ''
    group_names = parameters_obj.get('group_names')
    group_labels = core.snpStats.groups_from_params(parameters_obj,
                                                    group_names)
    vcf_table_files = core.snpStats.vcfs_from_params(parameters_obj,
                                                     snp_data_dir, group_names)
    if len(group_names) == 1:
        if group_names[0] == 'not_a_group_id':
            group_labels = ''
    snpAnn.snp_ann_pipe(gene_bed, snp_ann_dir, outdir, genes, position, vcf_table_files,
         group_labels, outfmt='string')


if __name__ == "__main__":
    main()
